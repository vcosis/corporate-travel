services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: corporatetravel-postgres
    environment:
      - POSTGRES_DB=corporatetravel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - corporatetravel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d corporatetravel"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: src/CorporateTravel.API/Dockerfile
    container_name: corporatetravel-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=corporatetravel;Username=postgres;Password=postgres
      - Jwt__Key=your-super-secret-key-with-at-least-32-characters
      - Jwt__Issuer=CorporateTravel
      - Jwt__Audience=CorporateTravel
    ports:
      - "5178:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - corporatetravel-network
    restart: unless-stopped

  # Frontend with Nginx Reverse Proxy
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: corporatetravel-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - corporatetravel-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  seq:
    image: datalust/seq:latest
    container_name: corporatetravel-seq
    environment:
      - ACCEPT_EULA=Y
      - SEQ_FIRSTRUN_ADMINPASSWORD=Admin123!
    ports:
      - "5341:80"
      - "5342:5342"
    volumes:
      - seq_data:/data
    networks:
      - corporatetravel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  seq_data:
    driver: local
  postgres_data:
    driver: local

networks:
  corporatetravel-network:
    driver: bridge 
