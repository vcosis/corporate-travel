version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: corporatetravel-postgres
    environment:
      - POSTGRES_DB=corporatetravel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - corporatetravel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d corporatetravel"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: corporatetravel-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=corporatetravel;Username=postgres;Password=postgres
    ports:
      - "5178:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - corporatetravel-network
    volumes:
      - ./backend:/app
      - /app/bin
      - /app/obj

volumes:
  postgres_data:
    driver: local

networks:
  corporatetravel-network:
    driver: bridge 